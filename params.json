{"name":"Flammarion","tagline":"The nifty ruby gui toolkit.","body":"# Flammarion GUI Toolkit\r\n\r\n[![Gem Version](https://badge.fury.io/rb/flammarion.svg)](https://badge.fury.io/rb/flammarion)\r\n\r\n## Overview\r\n\r\nFlammarion is an easy-to-use library for displaying information that you might\r\nnormally display to the command line in a slightly easier-to-access way.\r\n\r\nIt is not intended to be a full fledged application development toolkit. It is\r\nintended instead for small scripts where you just want to show some information\r\nwithout going through too much trouble.\r\n\r\n## Documentation\r\n\r\nThe easiest way to use Flammarion, is similar to how you might use STDOUT:\r\n\r\n```ruby\r\nrequire 'flammarion'\r\nf = Flammarion::Engraving.new\r\nf.puts \"Hello World!\"\r\n```\r\n\r\nIt can even support standard console color codes: (Thanks to [ansi_up](http://github.com/drudru/ansi_up)!)\r\n\r\n```ruby\r\nrequire 'colorized'\r\nf.puts \"This line will be red!\".red\r\nf.puts \"This #{\"word\".colorize(:green)} will not be blue.\"\r\n```\r\n\r\nHowever, you can also do more advanced things. Say you want to show a table. Easy!\r\n\r\n```ruby\r\nf.table(\r\n  [%w[Number Squared Sqrt].map{|h| h.light_magenta}] + # Make the header a different color\r\n  10.times.collect{|x| [x, x * x, Math.sqrt(x)]})\r\n```\r\n\r\nOr maybe you want to know where something is:\r\n\r\n```ruby\r\nf.map(\"Boston, MA\")\r\n```\r\n\r\nMaybe you even want to see both of those things *at the same time*!\r\n\r\n```ruby\r\nf.pane(\"numberstuff\").table([%w[Number Squared Sqrt].map{|h| h.light_magenta}] +\r\n  10.times.collect{|x| [x, x * x, Math.sqrt(x)]})\r\nf.pane(\"mapstuff\").map(\"Big Ben\")\r\n```\r\n\r\nIf you need feedback, there's a simple callback mechanism for buttons and text\r\nboxes:\r\n\r\n```ruby\r\nf.button(\"Click Here!!!\") {f.puts \"You clicked the button!\"}\r\nf.input(\"Placeholder > \") {|msg| f.puts \"You wrote: #{msg['text'].light_magenta}\"}\r\n```\r\n\r\nThere's lots more, too. I'll write more documentation eventually.\r\n\r\n## Installation\r\n\r\nFirst you need to install [Google Chrome](https://www.google.com/chrome/browser/desktop/index.html)\r\nand make sure it's in your path. Then you can install the gem:\r\n\r\n`gem install flammarion`\r\n\r\nor add it to your Gemfile.\r\n\r\n## Screenshots / Samples\r\n\r\n### Message Composer with Address Book\r\n\r\n```ruby\r\nf = Flammarion::Engraving.new\r\nf.orientation = :horizontal\r\nrecipient = f.subpane(\"number\").input(\"Phone Number\")\r\ntext = f.input(\"Body\", multiline:true)\r\nf.button(\"Send\") { send_message(recipient.to_s, text.to_s); f.status(\"Message Sent!\")}\r\nf.pane(\"contacts\").puts(\"Contacts\", replace:true)\r\nicons = %w[thumbs-up meh-o bicycle gears star-o star] + [nil] * 5\r\n30.times do |i|\r\n  right_icon = icons.sample\r\n  left_icon = icons.sample\r\n  name = Faker::Name.name\r\n  f.pane(\"contacts\").button(name, right_icon:right_icon, left_icon: left_icon) do\r\n    recipient = name\r\n    f.subpane(\"numer\").replace(name)\r\n  end\r\nend\r\n```\r\n\r\n![Message Sample](http://zach-capalbo.github.io/flammarion/img/messagesample.png)\r\n\r\n### Rake Task Runner\r\n\r\n```ruby\r\nf = Flammarion::Engraving.new(exit_on_disconnect:true)\r\nf.title \"frake #{Dir.pwd}\"\r\n\r\ndef run(task)\r\n  f2 = Flammarion::Engraving.new\r\n  f2.title task\r\n  f2.puts \"Running #{task.light_magenta}\"\r\n  Open3.popen3(task) do |i,o,e,t|\r\n    Thread.new {e.each_line{|l| f2.print l.red}}\r\n    o.each_line {|l| f2.print l}\r\n    f2.status t.value.success? ? \"Done!\".light_green : \"Failed!\".light_red\r\n  end\r\nend\r\n\r\nf.markdown \"# Rake Tasks: \"\r\n`rake -T`.each_line do |l|\r\n  f.break\r\n  parts = l.split(\"#\")\r\n  task = parts[0]\r\n  desc = parts[1]\r\n  f.puts desc\r\n  f.button(task) do\r\n    run(task)\r\n  end\r\nend\r\n\r\nf.wait_until_closed\r\n```\r\n\r\n![Frake](http://zach-capalbo.github.io/flammarion/img/frake.png)\r\n\r\n### Tables\r\n\r\n```ruby\r\nf = Flammerion::Engraving.new\r\nf.orientation = :horizontal\r\nf.table([[\"Id\", \"Name\", \"Address\"].map{|h| h.light_magenta}] + 20.times.map do |i|\r\n  [i, Faker::Name.name, Faker::Address.street_address]\r\nend)\r\nf.pane(\"sidebar\").pane(\"side1\").puts Faker::Hipster.paragraph.red\r\nf.pane(\"sidebar\").pane(\"side2\").puts Faker::Hipster.paragraph.green\r\n\r\n3.times { f.status(Faker::Hipster.sentence.light_green)}\r\n```\r\n\r\n![Table Sample](http://zach-capalbo.github.io/flammarion/img/table.png)\r\n\r\n\r\n## Behind the scenes\r\n\r\nFlammarion uses Chrome to display a simple html page, and WebSockets to communicate\r\nbetween the Javascript and ruby.\r\n\r\n# Bundled Packages\r\n\r\nFlammarion is distributed with a bunch of useful tools to make everyone's life easier.\r\nThey are:\r\n\r\n * [ansi up](https://github.com/drudru/ansi_up)\r\n * [highlihgt.js](https://highlightjs.org/)\r\n * [jquery](https://jquery.com/)\r\n * [jquery transit](http://ricostacruz.com/jquery.transit/)\r\n * [leaflet](http://leafletjs.com/)\r\n * [font awesome](https://fortawesome.github.io/Font-Awesome/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}